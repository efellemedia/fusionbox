#!/usr/bin/env bash

main() {
	# Use colors, but only if connected to a terminal, and that terminal
	# supports them.
	if which tput >/dev/null 2>&1; then
		ncolors=$(tput colors)
	fi
	if [ -t 1 ] && [ -n "$ncolors" ] && [ "$ncolors" -ge 8 ]; then
		RED="$(tput setaf 1)"
		GREEN="$(tput setaf 40)"
		YELLOW="$(tput setaf 3)"
		BLUE="$(tput setaf 27)"
		BOLD="$(tput bold)"
		NORMAL="$(tput sgr0)"
	else
		RED=""
		GREEN=""
		YELLOW=""
		BLUE=""
		BOLD=""
		NORMAL=""
	fi

	# Only enable exit-on-error after the non-critical colorization stuff,
	# which may fail on systems lacking tput or terminfo
	set -e

	FBOX=~/.fusionbox

	if [ -d "$FBOX" ]; then
		printf "${YELLOW}You already have Fusionbox installed.${NORMAL}\n"
		printf "You'll need to remove $FBOX if you want to re-install.\n\n"
		exit
	fi

	# Prevent the cloned repository from having insecure permissions. Failing to do
	# so causes compinit() calls to fail with "command not found: compdef" errors
	# for users with insecure umasks (e.g., "002", allowing group writability). Note
	# that this will be ignored under Cygwin by default, as Windows ACLs take
	# precedence over umasks except for filesystems mounted with option "noacl".
	umask g-w,o-w

	printf "\n${BLUE}Cloning Fusionbox...${NORMAL}\n"

	hash git >/dev/null 2>&1 || {
		echo "Error: git is not installed"
		exit 1
	}

	env git clone --depth=1 https://github.com/efellemedia/fusionbox.git $FBOX || {
		printf "Error: git clone of fusionbox repo failed\n"
		exit 1
	}

	# The Windows (MSYS) Git is not compatible with normal use on cygwin
	if [ "$OSTYPE" = cygwin ]; then
		if git --version | grep msysgit > /dev/null; then
			echo "Error: Windows/MSYS Git is not supported on Cygwin"
			echo "Error: Make sure the Cygwin git package is installed and is first on the path"
			exit 1
		fi
	fi

	printf "\n${BLUE}Creating default configuration in $FBOX${NORMAL}\n"
	cp -i "$FBOX/src/stubs/fusionbox.yaml" "$FBOX/fusionbox.yaml"

	printf "${GREEN}Fusionbox successfully initialized!${NORMAL}\n\n"
	printf "\tuse the command \`fusionbox config\`\n"
	printf "\tto access the configuration file\n\n"

	printf "${BLUE}Adding the \`fusionbox\` command to your PATH.${NORMAL}\n\n"
	ln -s "$HOME/.fusionbox/src/bin/fusionbox" "/usr/local/bin/fusionbox"

	# Also adding the `uninstall_fusionbox` command - it's useful
	ln -s "$HOME/.fusionbox/src/bin/uninstall" "/usr/local/bin/uninstall_fusionbox"

	printf "${GREEN}Hey! It worked! Fusionbox is now installed!${NORMAL}\n"
	printf "To start up your machine with the defaults just type \`fusionbox up\`\n"
	printf "or type \`fusionbox config\` to configure the settings\n\n"

	printf "${BLUE}Have a great rest of your day!${NORMAL}\n\n"
}

main
